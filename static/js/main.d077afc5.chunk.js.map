{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","id","uuidv4","resetForm","this","onSubmit","type","pattern","title","required","onChange","Component","ContactList","contacts","onRemove","length","map","contact","onClick","Filter","filter","placeholder","App","handleAddContact","newContact","handleRemoveContact","handleOnChange","getFiltredContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","filtredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGMA,EAAgB,CAAEC,KAAM,GAAIC,OAAQ,IAqD3BC,E,4MAlDbC,MAAQ,CACNJ,iB,EAGFK,iBAAmB,YAAiB,IAAdC,EAAa,EAAbA,OACZL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,iBAAmB,SAAAC,GACjBA,EAAEC,iBACF,MAAyB,EAAKP,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEdU,EADkB,EAAKC,MAAfD,OACF,CAAEE,GAAIC,cAAUd,OAAMC,Y,EAG9Bc,UAAY,WACV,EAAKR,SAASR,I,4CAGhB,WACE,MAAyBiB,KAAKb,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMgB,SAAUD,KAAKR,iBAArB,UACE,uBACEU,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAON,EACPsB,SAAUN,KAAKZ,mBAGjB,uBACEc,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRf,MAAOL,EACPqB,SAAUN,KAAKZ,mBAGjB,wBAAQc,KAAK,SAAb,gC,GA7CkBK,aCSXC,EAdK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OAAwB,IAApBD,EAASE,OAAqB,KAEhC,6BACGF,EAASG,KAAI,SAAAC,GAAO,OACnB,+BACGA,EAAQ7B,KADX,KACmB6B,EAAQ5B,OACzB,wBAAQ6B,QAAS,kBAAMJ,EAASG,EAAQhB,KAAxC,sBAFOgB,EAAQhB,UCMVkB,EAXA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQV,EAAe,EAAfA,SACxB,OACE,uBACEJ,KAAK,OACLI,SAAU,SAAAjB,GAAM,OAAIiB,EAASjB,EAAOA,OAAOC,QAC3CA,MAAO0B,EACPC,YAAY,iBCmEHC,E,4MAjEb/B,MAAQ,CACNsB,SAAU,CACR,CAAEZ,GAAI,OAAQb,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEY,GAAI,OAAQb,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEY,GAAI,OAAQb,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEY,GAAI,OAAQb,KAAM,iBAAkBC,OAAQ,cAEhD+B,OAAQ,I,EAqBVG,iBAAmB,SAAAC,GACjB,EAAK7B,UAAS,gBAAGkB,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,GAAD,mBAAMA,GAAN,CAAgBW,S,EAG7DC,oBAAsB,SAAAxB,GACpB,EAAKN,UAAS,kBAAmB,CAC/BkB,SADY,EAAGA,SACIO,QAAO,SAAAH,GAAO,OAAIA,EAAQhB,KAAOA,U,EAIxDyB,eAAiB,SAAAN,GAAM,OAAI,EAAKzB,SAAS,CAAEyB,Y,EAE3CO,mBAAqB,WACnB,MAA6B,EAAKpC,MAA1BsB,EAAR,EAAQA,SAAUO,EAAlB,EAAkBA,OAClB,OAAOP,EAASO,QAAO,SAAAH,GAAO,OAC5BA,EAAQ7B,KAAKwC,cAAcC,SAAST,EAAOQ,mB,uDAjC/C,WACE,IAAMf,EAAWiB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMrB,GAE9BmB,GACF5B,KAAKT,SAAS,CAAEkB,SAAUmB,M,gCAI9B,SAAmBG,EAAWC,GAC5B,IAAMC,EAAejC,KAAKb,MAAMsB,SAG5BwB,IAFiBD,EAAUvB,UAG7BiB,aAAaQ,QAAQ,WAAYL,KAAKM,UAAUF,M,oBAuBpD,WACE,IAAQjB,EAAWhB,KAAKb,MAAhB6B,OACFoB,EAAkBpC,KAAKuB,qBAC7B,OACE,qCACE,2CACA,cAAC,EAAD,CAAa5B,MAAOK,KAAKmB,mBACzB,0CACA,cAAC,EAAD,CAAQH,OAAQA,EAAQV,SAAUN,KAAKsB,iBACvC,cAAC,EAAD,CACEb,SAAU2B,EACV1B,SAAUV,KAAKqB,6B,GA3DPd,aCFlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d077afc5.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst INITIAL_STATE = { name: '', number: '' };\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    INITIAL_STATE,\r\n  };\r\n\r\n  handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n    onAdd({ id: uuidv4(), name, number });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","const ContactList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button onClick={() => onRemove(contact.id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      onChange={target => onChange(target.target.value)}\r\n      value={filter}\r\n      placeholder=\"Enter name \"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { filter } from 'domutils';\nimport React, { Component } from 'react';\nimport './App.css';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactList/ContactList';\nimport Filter from './components/filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  handleAddContact = newContact => {\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n  };\n\n  handleRemoveContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleOnChange = filter => this.setState({ filter });\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filtredContacts = this.getFiltredContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onAdd={this.handleAddContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleOnChange} />\n        <ContactList\n          contacts={filtredContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}